library(ggplot2)
library(dplyr)
library(statsr)
#load("movies.Rdata")
load("movies.Rdata")
glimpse(movies)
hist(movies$imdb_rating)
boxplot(movies$imdb_rating)
library(ggplot2)
library(dplyr)
library(statsr)
load("movies.Rdata")
summary(movies)
View(movies)
library(ggplot2)
library(dplyr)
library(statsr)
load("movies.Rdata")
glimpse(movies)
levels(movies$studio)
levels(movies$director)
unique(movies$director)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
View(data)
summary(data)
ggplot(movies, aes(x = imdb_rating)) + geom_histogram()
ggplot(movies, aes(x = imdb_rating)) + geom_histogram() +
stat_bin(binwidth = 1)
ggplot(movies, aes(x = imdb_rating)) + geom_histogram() +
stat_bin(binwidth = 20)
ggplot(movies, aes(x = imdb_rating)) + geom_histogram() +
stat_bin(binwidth = 0.1)
ggplot(movies, aes(x = imdb_rating)) + geom_histogram() +
stat_bin(bins = 10)
ggplot(movies, aes(x = imdb_rating)) + geom_histogram() +
stat_bin(binwidth = 1)
ggplot(movies, aes(x = imdb_rating)) + geom_histogram(binwidth = 10)
ggplot(movies, aes(x = imdb_rating)) + geom_histogram(binwidth = 1)
ggplot(movies, aes(x = imdb_rating)) + geom_histogram(binwidth = 0.1)
ggplot(movies, aes(x = imdb_rating)) + geom_histogram(binwidth = 0.2)
ggplot(movies, aes(x = imdb_rating)) + geom_histogram(binwidth = 0.2)
summary(movies$imdb_rating)
mosaicplot(movies$top200_box, movies$imdb_rating)
ggplot(data = movies, aes(x = audience_rating, y = imdb_rating))  +
geom_point()
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point()
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point(color = top200_box)
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point(col = top200_box)
?ggplot
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point(aes(colour = factor(top200_box)))
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point(aes(colour = factor(top200_box))) +
geom_line()
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point(aes(colour = factor(top200_box))) +
geom_line() + geom_smooth()
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point(aes(colour = factor(top200_box))) +
geom_smooth()
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point(aes(colour = factor(top200_box))) +
geom_smooth(method = "linear")
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point(aes(colour = factor(top200_box))) +
geom_smooth(method = "lm")
lm1 <- lm(imdb_rating ~ audience_score, movies)
summary(lm1)
glimpse(movies)
data <- movies %.% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
ggpair(data)
ggpair(data)
ggpairs(data)
library(ggplot2)
library(dplyr)
library(statsr)
library(GGally)
install.packages("GGally")
library(ggplot2)
library(dplyr)
library(statsr)
library(GGally)
ggpairs(data)
full_lm <-  lm(imdb_rating ~ ., data = data)
full_lm <-  lm(imdb_rating ~ ., data = data)
summary(full_lm)
max(full_lm$coefficients)
max(full_lm$rank)
max(full_lm$model)
max(full_lm$effects)
full_lm$coefficients
install.packages("MASS")
ry
library(ggplot2)
library(dplyr)
library(statsr)
library(MASS)
?stepAIC
library(MASS)
step <- stepAIC(fit, direction="backward")
step$anova # display results
library(MASS)
step <- stepAIC(full_lm, direction="backward")
step$anova # display results
?stepAIC
summary(full_lm)
# library(MASS)
# step <- stepAIC(full_lm, direction="backward")
# step$anova # display results
lm1 <- lm(imdb_rating ~ .-dvd_rel_year, data)
summary(lm1)
lm2 <- lm(imdb_rating ~ . -dvd_rel_year - thtr_rel_day)
lm2 <- lm(imdb_rating ~ . -dvd_rel_year - thtr_rel_day, data)
lm2 <- lm(imdb_rating ~ . -dvd_rel_year - thtr_rel_day, data)
summary(lm2)
# library(MASS)
# step <- stepAIC(full_lm, direction="backward")
# step$anova # display results
lm1 <- lm(imdb_rating ~ .-best_pic_winyes, data)
summary(lm1)
full_lm <-  lm(imdb_rating ~ ., data = data)
summary(full_lm)
# library(MASS)
# step <- stepAIC(full_lm, direction="backward")
# step$anova # display results
lm1 <- lm(imdb_rating ~ .-best_pic_winyes, data)
summary(lm1)
full_lm <-  lm(imdb_rating ~ ., data = data)
summary(full_lm)
# library(MASS)
# step <- stepAIC(full_lm, direction="backward")
# step$anova # display results
lm1 <- lm(imdb_rating ~ .-best_pic_winyes, data)
summary(lm1)
full_lm <-  lm(imdb_rating ~ ., data = data)
summary(full_lm)
# library(MASS)
# step <- stepAIC(full_lm, direction="backward")
# step$anova # display results
lm1 <- lm(imdb_rating ~ . - best_pic_winyes, data)
summary(lm1)
full_lm <-  lm(imdb_rating ~ ., data = data)
summary(full_lm)
glimpse(data)
# library(MASS)
# step <- stepAIC(full_lm, direction="backward")
# step$anova # display results
lm1 <- lm(imdb_rating ~ . - best_pic_win, data)
summary(lm1)
lm2 <- lm(imdb_rating ~ . -dvd_rel_year - best_pic_win, data)
summary(lm2)
lm3 <- lm(imdb_rationg ~  -dvd_rel_year - best_pic_win - thtr_rel_day, data)
summary(lm3)
lm3 <- lm(imdb_rationg ~.-dvd_rel_year - best_pic_win - thtr_rel_day, data)
summary(lm3)
lm3 <- lm(imdb_rating ~.-dvd_rel_year - best_pic_win - thtr_rel_day, data)
summary(lm3)
library(MASS)
step <- stepAIC(full_lm, direction="backward")
step$anova # display results
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
library(ggplot2)
library(dplyr)
library(statsr)
library(MASS)
load("movies.Rdata")
ggplot(movies, aes(x = imdb_rating)) + geom_histogram(binwidth = 0.2)
summary(movies$imdb_rating)
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point(aes(colour = factor(top200_box))) +
geom_smooth(method = "lm")
lm1 <- lm(imdb_rating ~ audience_score, movies)
summary(lm1)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
View(data)
glimpse(movies)
data <- movies %>% select(-title)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
movies %>% select(-title)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
select(movies, -title)
glimpse(movies)
select(movies, -title)
data <- movies %.% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
library(ggplot2)
library(dplyr)
library(statsr)
library(MASS)
load("movies.Rdata")
ggplot(movies, aes(x = imdb_rating)) + geom_histogram(binwidth = 0.2)
summary(movies$imdb_rating)
ggplot(data = movies, aes(x = audience_score, y = imdb_rating))  +
geom_point(aes(colour = factor(top200_box))) +
geom_smooth(method = "lm")
lm1 <- lm(imdb_rating ~ audience_score, movies)
summary(lm1)
data <- movies %>% select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
data <- movies %>% dplyr::select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
full_lm <-  lm(imdb_rating ~ ., data = data)
summary(full_lm)
# diagnostic plots
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(step)
summary(setp)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(lm)
summary(lm)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(lm$residuals, data$runtime)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$runtime, lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$imdb_num_votes, lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$imdb_num_votes, lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$imdb_num_votes, lm$residuals)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$imdb_num_votes, lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$critics_score, lm$residuals)
plot(lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(movies$runtime,lm$residuals)
plot(lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(lm)
length(movies$runtime)
length(lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(lm$fitted.values, lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(lm$fitted.values, lm$residuals)
qqnorm(lm$residuals)
qqline(lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(lm$fitted.values, lm$residuals)
qqnorm(lm$residuals)
qqline(lm$residuals)
plot(lm$residuals)
summary(data)
data <- movies %>% dplyr::select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
data <- na.omit(data)
full_lm <-  lm(imdb_rating ~ ., data = data)
summary(full_lm)
library(MASS)
step <- stepAIC(full_lm, direction="backward")
step$anova # display results
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(lm$fitted.values, lm$residuals)
qqnorm(lm$residuals)
qqline(lm$residuals)
plot(lm$residuals)
summary(lm)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$runtime, lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$runtime, lm$residuals)
plot(data$imdb_num_votes, lm$residuals)
plot(data$critics_rating, lm$residuals)
plot(data$critics_score, lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$runtime, lm$residuals)
plot(data$imdb_num_votes, lm$residuals)
plot(data$critics_score, lm$residuals)
plot(data$audience_score, lm$residuals)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$runtime, lm$residuals)
plot(log(data$imdb_num_votes), lm$residuals)
plot(data$critics_score, lm$residuals)
plot(data$audience_score, lm$residuals)
layout(matrix(c(1,2,3),2,1))
plot(lm$fitted.values, lm$residuals)
qqnorm(lm$residuals)
qqline(lm$residuals)
plot(lm$residuals)
layout(matrix(c(1,2,3,4),2,1))
plot(lm$fitted.values, lm$residuals)
qqnorm(lm$residuals)
qqline(lm$residuals)
plot(lm$residuals)
layout(matrix(c(1,2,3,4),2,1))
plot(lm$fitted.values, lm$residuals)
qqnorm(lm$residuals)
qqline(lm$residuals)
plot(lm$residuals)
layout(matrix(c(1,2,3,4),2,2))
plot(lm$fitted.values, lm$residuals)
qqnorm(lm$residuals)
qqline(lm$residuals)
plot(lm$residuals)
summary(lm)
library(ggplot2)
library(dplyr)
library(statsr)
library(MASS)
load("movies.Rdata")
glimpse(movies)
movies$dvd_rel_day
movies$imdb_num_votes
movies$critics_rating
movies$critics_score
movies$audience_rating
movies$audience_score
movies$runtime
newdata <- data.frame(genre = "Action", runtime = 118, thtr_rel_month = 7, dvd_rel_day = NA, imdb_num_votes = 11843, critics_rating = "Fresh", critics_score = 93, audience_rating = "Upright", audience_score = 90)
predict(lm, newdata)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$runtime, lm$residuals)
plot(log(data$imdb_num_votes), lm$residuals)
plot(data$critics_score, lm$residuals)
plot(data$audience_score, lm$residuals)
library(ggplot2)
library(dplyr)
library(statsr)
library(MASS)
load("movies.Rdata")
ggplot(movies, aes(x = imdb_rating)) + geom_histogram(binwidth = 0.2)
summary(movies$imdb_rating)
data <- movies %>% dplyr::select(-title, -studio, -director, -actor1, -actor2,
-actor3, -actor4, -actor5, -imdb_url, -rt_url)
data <- na.omit(data)
full_lm <-  lm(imdb_rating ~ ., data = data)
summary(full_lm)
# diagnostic plots
lm <- lm(imdb_rating ~ genre + runtime + thtr_rel_month + dvd_rel_day +
imdb_num_votes + critics_rating + critics_score + audience_rating +
audience_score, data = data)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(data$runtime, lm$residuals)
plot(log(data$imdb_num_votes), lm$residuals)
plot(data$critics_score, lm$residuals)
plot(data$audience_score, lm$residuals)
newdata <- data.frame(genre = "Action", runtime = 118, thtr_rel_month = 7, dvd_rel_day = NA, imdb_num_votes = 11843, critics_rating = "Fresh", critics_score = 93, audience_rating = "Upright", audience_score = 90)
predict(lm, newdata)
movies$genre
newdata <- data.frame(genre = "Action & Adventure", runtime = 118, thtr_rel_month = 7, dvd_rel_day = NA, imdb_num_votes = 11843, critics_rating = "Fresh", critics_score = 93, audience_rating = "Upright", audience_score = 90)
predict(lm, newdata)
movies$dvd_rel_day
newdata <- data.frame(genre = "Action & Adventure", runtime = 118, thtr_rel_month = 7, dvd_rel_day = 0, imdb_num_votes = 11843, critics_rating = "Fresh", critics_score = 93, audience_rating = "Upright", audience_score = 90)
predict(lm, newdata)
?predict
